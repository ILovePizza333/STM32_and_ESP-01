void delay_us(uint32_t us) ;

// Функция задержки в мс от 1 мс до 59 сек. (дальше переполнение)
void delay_ms(uint32_t ms) ;

// Функция преобразования знакового 16 битного числа в строку
void int16ToStr(int Number, char *pStr) ;

// Функция преобразования беззнакового 16 битного числа в строку
void Uint16ToStr(uint16_t Number, char *pStr);

// Функция преобразования беззнакового 32 битного числа в строку
// 0 .. 4 294 967 295  <CR> = 13, <LF> = 10
void Uint32ToStr(uint32_t Number, uint8_t *pStr, uint8_t ChEnd ) ;

// ========================= USART1 =========================

// Функция передачи символа по USART1 по готовности
void Tx1(char Symbol) ;

// Функция ожидания и приёма символа по USART1
char Rx1() ;

// Функция передачи массива символов (строки) по USART1
// пока не встретится "0" байт
void Tx1Str(char *pStr) ;
// Функция передачи массива символов (строки) по USART1 пока не встретится "0" байт
void Tx1Buf(char *pStr) ;





// ========================= USART2 =========================

// Функция передачи символа по USART2 по готовности
void Tx2(char Symbol) ;

// Функция ожидания и приёма символа по USART2
char Rx2() ;

// Функция передачи массива символов (строки) по USART2
// пока не встретится "0" байт
void Tx2Str(char *pStr) ;

// Функция передачи массива символов (строки) по USART2
// пока не встретится "0" байт
void Tx2Strln(char *pStr) ;

// Функция передачи массива символов (строки) по USART1
// пока не встретится "0" байт
void Tx2Buf(char *pStr) ;


// ========================= ESP =========================
// Функция передачи массива символов (строки) по USART1 пока не встретится "0" байт
// +задержка после отправки сообщения
void ESP_print(char *pStr) ;
void ESP_println(char *pStr) ;
void ESP_print_int(uint8_t *pStr) ;